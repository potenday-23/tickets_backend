buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.17'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'project'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

def queryDslVersion = '5.0.0'

dependencies {
    // Spring boot web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'

    // Json Parser
    implementation 'com.google.code.gson:gson'

    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // spring-security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // secret key
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
    annotationProcessor(
            'org.projectlombok:lombok',
            'org.projectlombok:lombok-mapstruct-binding:0.1.0',
            'org.mapstruct:mapstruct-processor:1.4.2.Final'
    )

    // mysql driver
    implementation 'mysql:mysql-connector-java:8.0.33'

    // Swagger
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.hibernate.validator:hibernate-validator:6.1.7.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // QueryDsl
    implementation "com.querydsl:querydsl-jpa:$queryDslVersion"
    implementation "com.querydsl:querydsl-core:$queryDslVersion"
    implementation "com.querydsl:querydsl-collections:$queryDslVersion"
    implementation "com.querydsl:querydsl-sql:$queryDslVersion" // QueryDSL SQL 모듈 추가
    implementation "com.querydsl:querydsl-sql-codegen:$queryDslVersion" // QueryDSL SQL 코드 생성기 추가
    annotationProcessor "com.querydsl:querydsl-apt:$queryDslVersion:jpa"
    compileOnly "com.querydsl:querydsl-apt:$queryDslVersion:jpa"
    annotationProcessor "com.querydsl:querydsl-apt:$queryDslVersion:jpa"

    // java.lang.NoClassDefFoundError 대응 코드
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // image resizing
    implementation group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //test
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // email
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // json
    implementation 'org.json:json:20220924'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.5'
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"

    // jsoup(html parsing)
    implementation 'org.jsoup:jsoup:1.14.3'

    // FCM
    implementation 'com.google.firebase:firebase-admin:8.2.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'

}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [generated]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}